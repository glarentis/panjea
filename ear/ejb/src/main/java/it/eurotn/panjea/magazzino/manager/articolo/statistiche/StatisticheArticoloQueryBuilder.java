package it.eurotn.panjea.magazzino.manager.articolo.statistiche;

import it.eurotn.util.PanjeaEJBUtil;

import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;

import javax.persistence.Query;

import org.hibernate.Hibernate;
import org.hibernate.SQLQuery;
import org.hibernate.ejb.QueryImpl;

public final class StatisticheArticoloQueryBuilder {

	/**
	 * @param query
	 *            query
	 * @return alias della query
	 */
	public static Query addScalar(Query query) {

		SQLQuery sqlQuery = ((SQLQuery) ((QueryImpl) query).getHibernateQuery());
		sqlQuery.addScalar("idDocumentoInventario");
		sqlQuery.addScalar("dataInventario");
		sqlQuery.addScalar("qtaInventario");
		sqlQuery.addScalar("idDeposito", Hibernate.INTEGER);
		sqlQuery.addScalar("codiceDeposito");
		sqlQuery.addScalar("descrizioneDeposito");
		sqlQuery.addScalar("codiceTipoDeposito");
		sqlQuery.addScalar("principaleDeposito");
		sqlQuery.addScalar("idArticolo", Hibernate.INTEGER);
		sqlQuery.addScalar("qtaAcquistato");
		sqlQuery.addScalar("importoAcquistato");
		sqlQuery.addScalar("qtaResoAcquistato");
		sqlQuery.addScalar("importoResoAcquistato");
		sqlQuery.addScalar("qtaCaricoAltro");
		sqlQuery.addScalar("importoCaricoAltro");
		sqlQuery.addScalar("qtaVenduto");
		sqlQuery.addScalar("importoVenduto");
		sqlQuery.addScalar("qtaResoVenduto");
		sqlQuery.addScalar("importoResoVenduto");
		sqlQuery.addScalar("qtaScaricoAltro");
		sqlQuery.addScalar("importoScaricoAltro");
		sqlQuery.addScalar("qtaCaricoTrasferimento");
		sqlQuery.addScalar("qtaScaricoTrasferimento");
		sqlQuery.addScalar("qtaCaricoProduzione");
		sqlQuery.addScalar("qtaScaricoProduzione");
		sqlQuery.addScalar("idUltimoDocumentoVendita");
		sqlQuery.addScalar("dataUltimaVendita");
		sqlQuery.addScalar("idUltimoDocumentoAcquisto");
		sqlQuery.addScalar("dataUltimoAcquisto");
		sqlQuery.addScalar("ultimoCosto");
		sqlQuery.addScalar("giacenza");

		return query;
	}

	/**
	 * Query sql per il caricamento delle statistiche dell'articolo.
	 *
	 * @param idArticolo
	 *            id articolo
	 * @param anno
	 *            anno
	 * @param idDeposito
	 *            id deposito
	 * @return sql
	 */
	public static String getSqlQuery(Integer idArticolo, Integer anno, Integer idDeposito) {
		StringBuilder sb = new StringBuilder(10000);

		sb.append("select max(stat.idDocumentoInventario) as idDocumentoInventario, ");
		sb.append("max(stat.dataInventario) as dataInventario, ");
		sb.append("max(stat.qtaInventario) as qtaInventario, ");
		sb.append("max(stat.idDeposito) as idDeposito, ");
		sb.append("max(stat.codiceDeposito) as codiceDeposito, ");
		sb.append("max(stat.descrizioneDeposito) as descrizioneDeposito, ");
		sb.append("max(stat.codiceTipoDeposito) as codiceTipoDeposito, ");
		sb.append("max(stat.principaleDeposito) as principaleDeposito, ");
		sb.append("max(stat.idArticolo) as idArticolo, ");
		sb.append("max(stat.qtaAcquistato) as qtaAcquistato, ");
		sb.append("max(stat.importoAcquistato) as importoAcquistato, ");
		sb.append("max(stat.qtaResoAcquistato) as qtaResoAcquistato, ");
		sb.append("max(stat.importoResoAcquistato) as importoResoAcquistato, ");
		sb.append("max(stat.qtaCaricoAltro) as qtaCaricoAltro, ");
		sb.append("max(stat.importoCaricoAltro) as importoCaricoAltro, ");
		sb.append("max(stat.qtaVenduto) as qtaVenduto, ");
		sb.append("max(stat.importoVenduto) as importoVenduto, ");
		sb.append("max(stat.qtaResoVenduto) as qtaResoVenduto, ");
		sb.append("max(stat.importoResoVenduto) as importoResoVenduto, ");
		sb.append("max(stat.qtaScaricoAltro) as qtaScaricoAltro, ");
		sb.append("max(stat.importoScaricoAltro) as importoScaricoAltro, ");
		sb.append("max(stat.qtaCaricoTrasferimento) as qtaCaricoTrasferimento, ");
		sb.append("max(stat.qtaScaricoTrasferimento) as qtaScaricoTrasferimento, ");
		sb.append("max(stat.qtaCaricoProduzione) as qtaCaricoProduzione, ");
		sb.append("max(stat.qtaScaricoProduzione) as qtaScaricoProduzione, ");
		sb.append("max(stat.idUltimoDocumentoVendita) as idUltimoDocumentoVendita, ");
		sb.append("max(stat.dataUltimaVendita) as dataUltimaVendita, ");
		sb.append("max(stat.idUltimoDocumentoAcquisto) as idUltimoDocumentoAcquisto, ");
		sb.append("max(stat.dataUltimoAcquisto) as dataUltimoAcquisto, ");
		sb.append("max(stat.ultimoCosto) as ultimoCosto, ");
		sb.append("max(stat.giacenza) as giacenza ");
		sb.append("from( ");
		sb.append("select ");
		sb.append("null as idDocumentoInventario, ");
		sb.append("null as dataInventario, ");
		sb.append("null as qtaInventario, ");
		sb.append("null as idDeposito, ");
		sb.append("null as codiceDeposito, ");
		sb.append("null as descrizioneDeposito, ");
		sb.append("null as codiceTipoDeposito, ");
		sb.append("null as principaleDeposito, ");
		sb.append("mov.articolo_id as idArticolo, ");
		sb.append("sum(if (tipoMovimentoOriginale=1 and mov.notaCreditoEnable=0 and mov.sezioneTipoMovimentoValore=0,mov.qtaCarico,0)) as qtaAcquistato, ");
		sb.append("sum(if (tipoMovimentoOriginale=1 and mov.notaCreditoEnable=0 and mov.sezioneTipoMovimentoValore=0,mov.importoCarico,0)) as importoAcquistato, ");
		sb.append("sum(if (tipoMovimentoOriginale=1 and mov.notaCreditoEnable=1 and mov.sezioneTipoMovimentoValore=0,mov.qtaCarico,0)) as qtaResoAcquistato, ");
		sb.append("sum(if (tipoMovimentoOriginale=1 and mov.notaCreditoEnable=1 and mov.sezioneTipoMovimentoValore=0,mov.importoCarico,0)) as importoResoAcquistato, ");
		sb.append("sum(if (tipoMovimentoOriginale=1 and mov.sezioneTipoMovimentoValore=1,mov.qtaCaricoAltro,0)) as qtaCaricoAltro, ");
		sb.append("sum(if (tipoMovimentoOriginale=1 and mov.sezioneTipoMovimentoValore=1,mov.importoCaricoAltro,0)) as importoCaricoAltro, ");
		sb.append("sum(if (tipoMovimentoOriginale=2 and mov.notaCreditoEnable=0 and mov.sezioneTipoMovimentoValore=0,mov.qtaScarico,0)) as qtaVenduto, ");
		sb.append("sum(if (tipoMovimentoOriginale=2 and mov.notaCreditoEnable=0 and mov.sezioneTipoMovimentoValore=0,mov.importoScarico,0)) as importoVenduto, ");
		sb.append("sum(if (tipoMovimentoOriginale=2 and mov.notaCreditoEnable=1 and mov.sezioneTipoMovimentoValore=0,mov.qtaScarico,0)) as qtaResoVenduto, ");
		sb.append("sum(if (tipoMovimentoOriginale=2 and mov.notaCreditoEnable=1 and mov.sezioneTipoMovimentoValore=0,mov.importoScarico,0)) as importoResoVenduto, ");
		sb.append("sum(if (tipoMovimentoOriginale=2 and mov.sezioneTipoMovimentoValore=1,mov.qtaScaricoAltro,0)) as qtaScaricoAltro, ");
		sb.append("sum(if (tipoMovimentoOriginale=2 and mov.sezioneTipoMovimentoValore=1,mov.importoScaricoAltro,0)) as importoScaricoAltro, ");
		sb.append("sum(if (tipoMovimentoOriginale=3 and tipoMovimento=1,mov.qtaCarico + mov.qtaCaricoAltro,0)) as qtaCaricoTrasferimento, ");
		sb.append("sum(if (tipoMovimentoOriginale=3 and tipoMovimento=2,mov.qtaScarico + mov.qtaScaricoAltro,0)) as qtaScaricoTrasferimento, ");
		sb.append("sum(if (tipoMovimentoOriginale=7 ,mov.qtaCarico + mov.qtaCaricoAltro,0)) as qtaCaricoProduzione, ");
		sb.append("sum(if (tipoMovimentoOriginale=7 ,mov.qtaScarico + mov.qtaScaricoAltro,0)) as qtaScaricoProduzione, ");
		sb.append("null as idUltimoDocumentoVendita, ");
		sb.append("null as dataUltimaVendita, ");
		sb.append("null as idUltimoDocumentoAcquisto, ");
		sb.append("null as dataUltimoAcquisto, ");
		sb.append("null as ultimoCosto, ");
		sb.append("null as giacenza ");
		sb.append("from dw_movimentimagazzino mov ");
		sb.append("where dataRegistrazione>=:dataIniziale ");
		sb.append("and mov.articolo_id=:idArticolo ");
		sb.append("and dataRegistrazione<=:dataFinale ");
		sb.append("and mov.deposito_id = :depositoId ");
		sb.append("group by mov.articolo_id ");
		sb.append("union ");
		sb.append("select max(inventario.idInventario) as idDocumentoInventario, ");
		sb.append("max(inventario.dataInventario) as dataInventario, ");
		sb.append("max(inventario.qta) as qtaInventario, ");
		sb.append("max(inventario.deposito_id) as idDeposito, ");
		sb.append("null as codiceDeposito, ");
		sb.append("null as descrizioneDeposito, ");
		sb.append("null as codiceTipoDeposito, ");
		sb.append("null as principaleDeposito, ");
		sb.append("max(inventario.idArticolo) as idArticolo, ");
		sb.append("0 as qtaAcquistato, ");
		sb.append("0 as importoAcquistato, ");
		sb.append("0 as qtaResoAcquistato, ");
		sb.append("0 as importoResoAcquistato, ");
		sb.append("0 as qtaCaricoAltro, ");
		sb.append("0 as importoCaricoAltro, ");
		sb.append("0 as qtaVenduto, ");
		sb.append("0 as importoVenduto, ");
		sb.append("0 as qtaResoVenduto, ");
		sb.append("0 as importoResoVenduto, ");
		sb.append("0 as qtaScaricoAltro, ");
		sb.append("0 as importoScaricoAltro, ");
		sb.append("0 as qtaCaricoTrasferimento, ");
		sb.append("0 as qtaScaricoTrasferimento, ");
		sb.append("0 as qtaCaricoProduzione, ");
		sb.append("0 as qtaScaricoProduzione, ");
		sb.append("null as idUltimoDocumentoVendita, ");
		sb.append("null as dataUltimaVendita, ");
		sb.append("null as idUltimoDocumentoAcquisto, ");
		sb.append("null as dataUltimoAcquisto, ");
		sb.append("null as ultimoCosto, ");
		sb.append("null as giacenza ");
		sb.append("from( ");
		sb.append("select ");
		sb.append("   invu.depositoOrigine_id as deposito_id, ");
		sb.append("   invu.id as idInventario, ");
		sb.append("   invu.dataRegistrazione as dataInventario, ");
		sb.append("   rm.qtaMagazzino as qta, ");
		sb.append("   rm.articolo_id as idArticolo ");
		sb.append("   from maga_area_magazzino invu inner join maga_righe_magazzino rm on invu.id = rm.areaMagazzino_id ");
		sb.append("   where invu.dataRegistrazione<=:dataFinale ");
		sb.append("   and tipoOperazione=0 ");
		sb.append("   and invu.depositoOrigine_id = :depositoId ");
		sb.append("   and rm.articolo_id = :idArticolo ");
		sb.append("   union ");
		sb.append("   select ");
		sb.append("   :depositoId as deposito_id, null as idInventario, null as dataInventario, 0 as qta, :idArticolo as idArticolo ");
		sb.append("   order by dataInventario desc LIMIT 1) as inventario ");
		sb.append("union ");
		sb.append("select null as idDocumentoInventario, ");
		sb.append("null as dataInventario, ");
		sb.append("null as qtaInventario, ");
		sb.append("max(acquistato.deposito_id) as idDeposito, ");
		sb.append("null as codiceDeposito, ");
		sb.append("null as descrizioneDeposito, ");
		sb.append("null as codiceTipoDeposito, ");
		sb.append("null as principaleDeposito, ");
		sb.append("max(acquistato.articolo_id) as idArticolo, ");
		sb.append("0 as qtaAcquistato, ");
		sb.append("0 as importoAcquistato, ");
		sb.append("0 as qtaResoAcquistato, ");
		sb.append("0 as importoResoAcquistato, ");
		sb.append("0 as qtaCaricoAltro, ");
		sb.append("0 as importoCaricoAltro, ");
		sb.append("0 as qtaVenduto, ");
		sb.append("0 as importoVenduto, ");
		sb.append("0 as qtaResoVenduto, ");
		sb.append("0 as importoResoVenduto, ");
		sb.append("0 as qtaScaricoAltro, ");
		sb.append("0 as importoScaricoAltro, ");
		sb.append("0 as qtaCaricoTrasferimento, ");
		sb.append("0 as qtaScaricoTrasferimento, ");
		sb.append("0 as qtaCaricoProduzione, ");
		sb.append("0 as qtaScaricoProduzione, ");
		sb.append("null as idUltimoDocumentoVendita, ");
		sb.append("null as dataUltimaVendita, ");
		sb.append("max(acquistato.idAreaMagazzino) as idUltimoDocumentoAcquisto, ");
		sb.append("max(acquistato.dataAcquisto) as dataUltimoAcquisto, ");
		sb.append("null as ultimoCosto, ");
		sb.append("null as giacenza ");
		sb.append("from ( ");
		sb.append("select ");
		sb.append("   movAcq.deposito_id as deposito_id, ");
		sb.append("   movAcq.articolo_id as articolo_id, ");
		sb.append("   movAcq.dataRegistrazione as dataAcquisto, ");
		sb.append("   movAcq.areaMagazzino_id as idAreaMagazzino ");
		sb.append("   from dw_movimentimagazzino movAcq ");
		sb.append("   inner join docu_tipi_documento td on td.codice=movAcq.tipoDocumentoCodice ");
		sb.append("   where dataRegistrazione>=:dataIniziale ");
		sb.append("   and movAcq.articolo_id=:idArticolo ");
		sb.append("   and movAcq.tipoMovimentoOriginale=1 ");
		sb.append("   and movAcq.sezioneTipoMovimentoValore=0 ");
		sb.append("   and movAcq.notaCreditoEnable=0 ");
		sb.append("   and dataRegistrazione<=:dataFinale ");
		sb.append("   and movAcq.deposito_id = :depositoId ");
		sb.append("   union ");
		sb.append("   select ");
		sb.append("   :depositoId as deposito_id, :idArticolo as articolo_id, null as dataAcquisto, null as idAreaMagazzino ");
		sb.append("   ORDER BY dataAcquisto desc limit 1 ) as acquistato ");
		sb.append("union ");
		sb.append("select null as idDocumentoInventario, ");
		sb.append("null as dataInventario, ");
		sb.append("null as qtaInventario, ");
		sb.append("max(venduto.deposito_id) as idDeposito, ");
		sb.append("null as codiceDeposito, ");
		sb.append("null as descrizioneDeposito, ");
		sb.append("null as codiceTipoDeposito, ");
		sb.append("null as principaleDeposito, ");
		sb.append("max(venduto.articolo_id) as idArticolo, ");
		sb.append("0 as qtaAcquistato, ");
		sb.append("0 as importoAcquistato, ");
		sb.append("0 as qtaResoAcquistato, ");
		sb.append("0 as importoResoAcquistato, ");
		sb.append("0 as qtaCaricoAltro, ");
		sb.append("0 as importoCaricoAltro, ");
		sb.append("0 as qtaVenduto, ");
		sb.append("0 as importoVenduto, ");
		sb.append("0 as qtaResoVenduto, ");
		sb.append("0 as importoResoVenduto, ");
		sb.append("0 as qtaScaricoAltro, ");
		sb.append("0 as importoScaricoAltro, ");
		sb.append("0 as qtaCaricoTrasferimento, ");
		sb.append("0 as qtaScaricoTrasferimento, ");
		sb.append("0 as qtaCaricoProduzione, ");
		sb.append("0 as qtaScaricoProduzione, ");
		sb.append("max(venduto.idAreaMagazzino) as idUltimoDocumentoVendita, ");
		sb.append("max(venduto.dataVenduto) as dataUltimaVendita, ");
		sb.append("null as idUltimoDocumentoAcquisto, ");
		sb.append("null as dataUltimoAcquisto, ");
		sb.append("null as ultimoCosto, ");
		sb.append("null as giacenza ");
		sb.append("from( ");
		sb.append("select ");
		sb.append("   movVen.deposito_id as deposito_id, ");
		sb.append("   movVen.articolo_id as articolo_id, ");
		sb.append("   movVen.dataRegistrazione as dataVenduto, ");
		sb.append("   movVen.areaMagazzino_id as idAreaMagazzino ");
		sb.append("   from dw_movimentimagazzino movVen ");
		sb.append("   inner join docu_tipi_documento td on td.codice=movVen.tipoDocumentoCodice ");
		sb.append("   where dataRegistrazione>=:dataIniziale ");
		sb.append("   and movVen.articolo_id=:idArticolo ");
		sb.append("   and movVen.tipoMovimentoOriginale=2 ");
		sb.append("   and movVen.sezioneTipoMovimentoValore=0 ");
		sb.append("   and movVen.notaCreditoEnable=0 ");
		sb.append("   and dataRegistrazione<=:dataFinale ");
		sb.append("   and movVen.deposito_id = :depositoId ");
		sb.append("   union ");
		sb.append("   select ");
		sb.append("   :depositoId as deposito_id, ");
		sb.append("   :idArticolo as articolo_id, ");
		sb.append("   null as dataVenduto, ");
		sb.append("   null as idAreaMagazzino ");
		sb.append("   ORDER BY dataVenduto desc limit 1) as venduto ");
		sb.append("union ");
		// Ultimo costo dalla valorizzazione
		sb.append("select null as idDocumentoInventario, ");
		sb.append("null as dataInventario, ");
		sb.append("null as qtaInventario, ");
		sb.append("valorizzazione.idDeposito as idDeposito, ");
		sb.append("null as codiceDeposito, ");
		sb.append("null as descrizioneDeposito, ");
		sb.append("null as codiceTipoDeposito, ");
		sb.append("null as principaleDeposito, ");
		sb.append("valorizzazione.idArticolo as idArticolo, ");
		sb.append("0 as qtaAcquistato, ");
		sb.append("0 as importoAcquistato, ");
		sb.append("0 as qtaResoAcquistato, ");
		sb.append("0 as importoResoAcquistato, ");
		sb.append("0 as qtaCaricoAltro, ");
		sb.append("0 as importoCaricoAltro, ");
		sb.append("0 as qtaVenduto, ");
		sb.append("0 as importoVenduto, ");
		sb.append("0 as qtaResoVenduto, ");
		sb.append("0 as importoResoVenduto, ");
		sb.append("0 as qtaScaricoAltro, ");
		sb.append("0 as importoScaricoAltro, ");
		sb.append("0 as qtaCaricoTrasferimento, ");
		sb.append("0 as qtaScaricoTrasferimento, ");
		sb.append("0 as qtaCaricoProduzione, ");
		sb.append("0 as qtaScaricoProduzione, ");
		sb.append("null as idUltimoDocumentoVendita, ");
		sb.append("null as dataUltimaVendita, ");
		sb.append("null as idUltimoDocumentoAcquisto, ");
		sb.append("null as dataUltimoAcquisto, ");
		sb.append("valorizzazione.costo as ultimoCosto, ");
		sb.append("valorizzazione.qtaInventario+valorizzazione.qtaMagazzinoCarico+valorizzazione.qtaMagazzinoCaricoAltro-valorizzazione.qtaMagazzinoScarico-valorizzazione.qtaMagazzinoScaricoAltro as giacenza ");
		sb.append("from ( ");
		sb.append("select ");
		sb.append("   idArticolo, ");
		sb.append("   idDeposito, ");
		sb.append("   max(qtaMagazzino) as qtaInventario, ");
		sb.append("   sum(qtaScarico) as qtaMagazzinoScarico, ");
		sb.append("   sum(qtaCarico) as qtaMagazzinoCarico, ");
		sb.append("   sum(qtaCaricoAltro) as qtaMagazzinoCaricoAltro, ");
		sb.append("   sum(qtaScaricoAltro) as qtaMagazzinoScaricoAltro, ");
		sb.append("   coalesce((select rm.importoInValutaAziendaNetto from maga_area_magazzino am inner join maga_righe_magazzino rm on rm.areaMagazzino_id = am.id where rm.importoInValutaAziendaNetto <> 0 and am.aggiornaCostoUltimo = true and am.dataRegistrazione <= :dataFinale and am.depositoOrigine_id = :depositoId and rm.articolo_id = idArticolo order by am.dataRegistrazione desc limit 1),0)as costo ");
		sb.append("   from ");
		sb.append("   ( ");
		sb.append("      select ");
		sb.append("      invr.articolo_id as idArticolo, ");
		sb.append("      invj.depositoOrigine_id as idDeposito, ");
		sb.append("      invr.qtaMagazzino as qtaMagazzino, ");
		sb.append("      0 as qtaCarico, ");
		sb.append("      0 as qtaScarico, ");
		sb.append("      0 as qtaCaricoAltro, ");
		sb.append("      0 as qtaScaricoAltro ");
		sb.append("      from maga_righe_magazzino invr ");
		sb.append("      inner join ");
		sb.append("      ( ");
		sb.append("         select ");
		sb.append("         inv.id, inv.dataRegistrazione,inv.depositoOrigine_id ");
		sb.append("         from maga_area_magazzino inv ");
		sb.append("         where inv.dataRegistrazione<=:dataFinale ");
		sb.append("         and tipoOperazione=0 ");
		sb.append("         and inv.depositoOrigine_id=:depositoId ");
		sb.append("         order by inv.dataRegistrazione desc LIMIT 1 ");
		sb.append("      ) ");
		sb.append("      invj on invj.id=invr.areaMagazzino_id ");
		sb.append("      inner join maga_articoli art on invr.articolo_id=art.id ");
		sb.append("      where art.id = :idArticolo ");
		sb.append("      and art.abilitato=true ");
		sb.append("      union ");
		sb.append("      select ");
		sb.append("      mov.articolo_id as idArticolo, ");
		sb.append("      mov.deposito_id as idDeposito, ");
		sb.append("      0 as qtaMagazzino , ");
		sb.append("      sum(mov.qtaCarico) as qtaCarico, ");
		sb.append("      sum(mov.qtaScarico) as qtaScarico, ");
		sb.append("      sum(mov.qtaCaricoAltro) as qtaCaricoAltro, ");
		sb.append("      sum(mov.qtaScaricoAltro) as qtaScaricoAltro ");
		sb.append("      from dw_movimentimagazzino mov ");
		sb.append("      inner join maga_articoli art on mov.articolo_id=art.id ");
		sb.append("      where mov.deposito_id=:depositoId ");
		sb.append("      and mov.dataRegistrazione>= ");
		sb.append("      ( ");
		sb.append("         select ");
		sb.append("         invu.dataRegistrazione ");
		sb.append("         from maga_area_magazzino invu ");
		sb.append("         where invu.dataRegistrazione<=:dataFinale ");
		sb.append("         and tipoOperazione=0 ");
		sb.append("         and invu.depositoOrigine_id=:depositoId ");
		sb.append("         union ");
		sb.append("         select ");
		sb.append("         '2001-01-01 00:00:00' as dataRegistrazione ");
		sb.append("         order by dataRegistrazione desc LIMIT 1 ");
		sb.append("      ) ");
		sb.append("      and mov.dataRegistrazione<=:dataFinale ");
		sb.append("      and art.abilitato=true ");
		sb.append("      and art.id = :idArticolo ");
		sb.append("      group by mov.articolo_id ");
		sb.append("      union ");
		sb.append("      select ");
		sb.append("      art.id as idArticolo, ");
		sb.append("      :depositoId as idDeposito, ");
		sb.append("      0 as qtaMagazzino , ");
		sb.append("      0 as qtaCarico, ");
		sb.append("      0 as qtaScarico, ");
		sb.append("      0 as qtaCaricoAltro, ");
		sb.append("      0 as qtaScaricoAltro ");
		sb.append("      from maga_articoli art ");
		sb.append("      where art.id = :idArticolo ");
		sb.append("      and art.abilitato=true ");
		sb.append("   ) ");
		sb.append("   as val ");
		sb.append("   group by idArticolo ");
		sb.append("   order by null ");
		sb.append(") as valorizzazione ");
		sb.append("union ");
		sb.append("select null as idDocumentoInventario, ");
		sb.append("null as dataInventario, ");
		sb.append("null as qtaInventario, ");
		sb.append("dep.id as idDeposito, ");
		sb.append("dep.codice as codiceDeposito, ");
		sb.append("dep.descrizione as descrizioneDeposito, ");
		sb.append("tdep.codice as codiceTipoDeposito, ");
		sb.append("dep.principale as principaleDeposito, ");
		sb.append(":idArticolo as idArticolo, ");
		sb.append("0 as qtaAcquistato, ");
		sb.append("0 as importoAcquistato, ");
		sb.append("0 as qtaResoAcquistato, ");
		sb.append("0 as importoResoAcquistato, ");
		sb.append("0 as qtaCaricoAltro, ");
		sb.append("0 as importoCaricoAltro, ");
		sb.append("0 as qtaVenduto, ");
		sb.append("0 as importoVenduto, ");
		sb.append("0 as qtaResoVenduto, ");
		sb.append("0 as importoResoVenduto, ");
		sb.append("0 as qtaScaricoAltro, ");
		sb.append("0 as importoScaricoAltro, ");
		sb.append("0 as qtaCaricoTrasferimento, ");
		sb.append("0 as qtaScaricoTrasferimento, ");
		sb.append("0 as qtaCaricoProduzione, ");
		sb.append("0 as qtaScaricoProduzione, ");
		sb.append("null as idUltimoDocumentoVendita, ");
		sb.append("null as dataUltimaVendita, ");
		sb.append("null as idUltimoDocumentoAcquisto, ");
		sb.append("null as dataUltimoAcquisto, ");
		sb.append("null as ultimoCosto, ");
		sb.append("null as giacenza ");
		sb.append("from anag_depositi dep left join anag_tipo_deposito tdep on tdep.id=dep.tipoDeposito_id ");
		sb.append("where dep.id = :depositoId ");
		sb.append(") as stat ");
		sb.append("group by stat.idArticolo ");

		String query = sb.toString();

		// sostituisco i parametri
		query = query.replaceAll(":idArticolo", idArticolo.toString());
		query = query.replaceAll(":depositoId", idDeposito.toString());

		DateFormat format = new SimpleDateFormat("yyyy-MM-dd");

		Calendar calendarDataInizio = Calendar.getInstance();
		calendarDataInizio.set(anno, 0, 1, 0, 0, 0);
		Date dataInizio = calendarDataInizio.getTime();
		query = query.replaceAll(":dataIniziale", PanjeaEJBUtil.addQuote(format.format(dataInizio)));

		Calendar calendarDataFine = Calendar.getInstance();
		calendarDataFine.set(anno, 11, 31, 0, 0, 0);
		Date dataFine = calendarDataFine.getTime();
		query = query.replaceAll(":dataFinale", PanjeaEJBUtil.addQuote(format.format(dataFine)));

		return query;
	}

	private StatisticheArticoloQueryBuilder() {
	}
}
