-- Aggiorno i codici di pagamento (setto l'id)
update ordi_ordini_importati inner join part_codici_pagamento on part_codici_pagamento.codicePagamento=ordi_ordini_importati.codicePagamento set ordi_ordini_importati.pagamento_id=part_codici_pagamento.id where (ordi_ordini_importati.provenienza = :provenienza or :tutteProvenienze = 1) and ordi_ordini_importati.pagamento_id is null;
-- Aggiorno l'agente (setto l'id)
update ordi_ordini_importati inner join anag_entita on anag_entita.codice=ordi_ordini_importati.codiceAgente  set ordi_ordini_importati.agente_id=anag_entita.id where anag_entita.TIPO_ANAGRAFICA='A' and (ordi_ordini_importati.provenienza = :provenienza or :tutteProvenienze = 1);
-- Aggiorno id tipoAreaordine
update ordi_ordini_importati inner join docu_tipi_documento on docu_tipi_documento.codice=ordi_ordini_importati.codiceTipoDocumento  set ordi_ordini_importati.tipoDocumento_id=docu_tipi_documento.id where (ordi_ordini_importati.provenienza = :provenienza or :tutteProvenienze = 1);
-- Aggiungo id e fido del cliente
update ordi_ordini_importati inner join anag_entita on anag_entita.codice=ordi_ordini_importati.codiceEntita  set ordi_ordini_importati.entita_id=anag_entita.id, ordi_ordini_importati.importoFido=anag_entita.fido where anag_entita.TIPO_ANAGRAFICA='C' and (ordi_ordini_importati.provenienza = :provenienza or :tutteProvenienze = 1);
-- Aggiungo id della sede se ho il codice sede impostato
update ordi_ordini_importati inner join anag_sedi_entita on anag_sedi_entita.entita_id=ordi_ordini_importati.entita_id and anag_sedi_entita.codice=ordi_ordini_importati.idSedeImportata set ordi_ordini_importati.sedeEntita_id=anag_sedi_entita.id where (ordi_ordini_importati.provenienza = :provenienza or :tutteProvenienze = 1);
-- Aggiungo id della sede principale se non ho il codice sede impostato
update ordi_ordini_importati inner join anag_sedi_entita on anag_sedi_entita.entita_id=ordi_ordini_importati.entita_id inner join anag_tipo_sede_entita ts on ts.id=anag_sedi_entita.tipoSede_id set ordi_ordini_importati.sedeEntita_id=anag_sedi_entita.id where ts.sede_principale=1 and ordi_ordini_importati.idSedeImportata is null and (ordi_ordini_importati.provenienza = :provenienza or :tutteProvenienze = 1);
-- Aggiungo eventuale blocco della sede entita e flag se eredita dati commerciali
update ordi_ordini_importati inner join anag_sedi_entita on anag_sedi_entita.id=ordi_ordini_importati.sedeEntita_id set ordi_ordini_importati.sedeBloccata=anag_sedi_entita.blocco,ordi_ordini_importati.noteBlocco=anag_sedi_entita.noteBlocco,ordi_ordini_importati.sedeEredita=anag_sedi_entita.ereditaDatiCommerciali where (ordi_ordini_importati.provenienza = :provenienza or :tutteProvenienze = 1);
-- Aggiorno i dati di magazzino impostando i dati sull'ordine con i dati sulla sede se non eredita
update ordi_ordini_importati inner join maga_sedi_magazzino on maga_sedi_magazzino.sedeEntita_id = ordi_ordini_importati.sedeEntita_id set ordi_ordini_importati.listino_id = maga_sedi_magazzino.listino_id, ordi_ordini_importati.listinoAlternativo_id = maga_sedi_magazzino.listinoAlternativo_id where ordi_ordini_importati.sedeEredita=false and (ordi_ordini_importati.provenienza = :provenienza or :tutteProvenienze = 1);
-- Aggiorno i dati di magazzino impostando i dati sull'ordine con i dati sulla sede principale se le sedi ereditano
update  ordi_ordini_importati inner join  anag_sedi_entita on anag_sedi_entita.entita_id=ordi_ordini_importati.entita_id inner join anag_tipo_sede_entita ts on ts.id=anag_sedi_entita.tipoSede_id inner join maga_sedi_magazzino on maga_sedi_magazzino.sedeEntita_id = anag_sedi_entita.id set ordi_ordini_importati.listino_id = maga_sedi_magazzino.listino_id, ordi_ordini_importati.listinoAlternativo_id = maga_sedi_magazzino.listinoAlternativo_id where ts.sede_principale=1 and ordi_ordini_importati.sedeEredita=true and (ordi_ordini_importati.provenienza = :provenienza or :tutteProvenienze = 1);
-- Aggiorno i dati di pagamento impostando i dati sull'ordine con i dati sulla sede se non eredita
update ordi_ordini_importati inner join part_sedi_pagamento on part_sedi_pagamento.sedeEntita_id = ordi_ordini_importati.sedeEntita_id set ordi_ordini_importati.pagamentoDeterminato_id = part_sedi_pagamento.codicePagamento_id where ordi_ordini_importati.sedeEredita=false and (ordi_ordini_importati.provenienza = :provenienza or :tutteProvenienze = 1);
-- Aggiorno i dati di pagamento impostando i dati sull'ordine con i dati sulla sede se eredita
update ordi_ordini_importati inner join anag_sedi_entita on anag_sedi_entita.entita_id=ordi_ordini_importati.entita_id inner join anag_tipo_sede_entita ts on ts.id=anag_sedi_entita.tipoSede_id inner join part_sedi_pagamento on part_sedi_pagamento.sedeEntita_id = anag_sedi_entita.id set ordi_ordini_importati.pagamentoDeterminato_id=part_sedi_pagamento.codicePagamento_id where ts.sede_principale=1 and ordi_ordini_importati.sedeEredita=true and (ordi_ordini_importati.provenienza = :provenienza or :tutteProvenienze = 1) ;
-- Preparo l'assortimento a true per tutti gli articoli, impostero a false nelle successive 2 query
update ordi_righe_ordine_importate ri inner join ordi_ordini_importati ord on ord.id=ri.ordine_id set ri.assortimento=true where (ord.provenienza = :provenienza or :tutteProvenienze = 1);
-- Aggiorno l'articolo provando ad identificarlo con il codice fornitore (assortimento articolo per le righe trovate)
update ordi_righe_ordine_importate ri inner join ordi_ordini_importati ord on ord.id=ri.ordine_id inner join maga_codici_articolo_entita artEntita on artEntita.entita_id=ord.entita_id and artEntita.codice=ri.codiceArticolo inner join anag_entita e on e.id=ord.entita_id set ri.articolo_id=artEntita.articolo_id,ri.assortimento=e.assortimentoArticoli where (ord.provenienza = :provenienza or :tutteProvenienze = 1);
-- Aggiorno l'assortimento articolo a false per le righe che non hanno codici articolo entit√†
update ordi_righe_ordine_importate ri inner join ordi_ordini_importati ord on ord.id=ri.ordine_id left join maga_codici_articolo_entita artEntita on artEntita.entita_id=ord.entita_id and artEntita.codice=ri.codiceArticolo inner join anag_entita e on e.id=ord.entita_id set ri.assortimento=false where artEntita.codice is null and e.assortimentoArticoli=true and (ord.provenienza = :provenienza or :tutteProvenienze = 1);
-- Aggiorno l'articolo
update ordi_righe_ordine_importate ri inner join ordi_ordini_importati ord on ord.id=ri.ordine_id inner join maga_articoli art on art.codice=ri.codiceArticolo set ri.articolo_id=art.id where (ord.provenienza = :provenienza or :tutteProvenienze = 1);
-- Aggiorno importo rate aperte del cliente dell'ordine
update ordi_ordini_importati ordini inner join (select doc.entita_id as idEntita,sum(rata.importoInValutaAzienda)-coalesce(sum(pag.importoInValutaAzienda+pag.importoInValutaAziendaForzato),0) as importo from part_rate rata left outer join part_pagamenti pag on rata.id=pag.rata_id inner join part_area_partite areaRate on rata.areaRate_id=areaRate.id inner join docu_documenti doc on areaRate.documento_id=doc.id group by doc.entita_id) as importiEntita on ordini.entita_id = importiEntita.idEntita set importoRateAperte = importiEntita.importo where  (provenienza = :provenienza or :tutteProvenienze = 1);
